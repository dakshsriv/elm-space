-- Consider this the equivalent of "myShapes" on the other slots. You start out with a basic shape
myEntities model =  
    let
        useTexture = getTexture model.textureLoader.textures
        planetsr = [("mercury", 10, 90, 0.03, 1.2),("venus", 23, 210, 0.01, 0.7),("earth", 25, 340, 0.1, 0.4),("mars", 14, 500, 0.1, 0.2),("jupiter", 300, 1000, 0.25, 0.1),("saturn", 250, 1750, 0.24, 0.06),("uranus", 100, 2300, 0.15, 0.03),("neptune", 99, 2800, 0.16, 0.01)]
    in
        [ -- Making an ellipsoid requires you to specify the length, width, and height. You also need to pass in the model.
        
        List.map(\(textureName, size, distance, dayL, yearL) -> sphere 30 ) planetsr
        ]

-- move / edit the light
light =
    pointLight
        { position = Point3d.centimeters 0 0 0    -- position of the light
        , chromaticity = Light.sunlight             -- the colour of the light (see https://package.elm-lang.org/packages/ianmackenzie/elm-3d-scene/latest/Scene3d-Light#Chromaticity)
        , intensity = LuminousFlux.lumens 100000     -- how intense the light is
        }
showLight = True -- whether to show the light ball or not

-- Use "loadTexture [name] [url]" to load in texture images from the Internet!
-- Give each one a unique name.
-- You can list many of them!
myTextures = 
    [ loadTexture "mercury" "https://raw.githubusercontent.com/dakshsriv/elm-space/master/mercury.jpg"
    ,
      loadTexture "venus" "https://raw.githubusercontent.com/dakshsriv/elm-space/master/venus.jpg"
    ,  
      loadTexture "earth" "https://raw.githubusercontent.com/dakshsriv/elm-space/master/Webp.net-resizeimage%20(1).jpg"
    ,
      loadTexture "mars" "https://raw.githubusercontent.com/dakshsriv/elm-space/master/mars.jpg"
    ,
      loadTexture "jupiter" "https://raw.githubusercontent.com/dakshsriv/elm-space/master/jupiter.jpg"
    ,
      loadTexture "saturn" "https://raw.githubusercontent.com/dakshsriv/elm-space/master/saturn.jpg"
    ,
      loadTexture "uranus" "https://raw.githubusercontent.com/dakshsriv/elm-space/master/uranus.jpg"
    ,
      loadTexture "neptune" "https://raw.githubusercontent.com/dakshsriv/elm-space/master/neptune.jpg"
    ]

-- Usage: `svgTexture "name" "name`, where shape is any 2D shape or group
-- Give each one a unique name.
-- You can list many of them!
svgTextures =
    [ svgTexture "squares" squares
    ]

-- SVG textures are 50 by 50
squares =
    group
    [
        square 25 |> filled purple |> move (12.5,12.5)
    ,   square 25 |> filled orange |> move (-12.5,12.5)
    ,   square 25 |> filled purple |> move (-12.5,-12.5)
    ,   square 25 |> filled orange |> move (12.5,-12.5)
    ]

-- Put your 2D shapes here, and they will be overlayed on top of the screen!
overlay : Model -> List (Shape Msg)
overlay model =
    [
        angleDisplay model
    ]

-- This colour is used to create the floor. If you want custom colours, use Color.hsl or Color.rgb!
floorColour = Color.green

-- Floor size, in metres. Set to 0 to disable.
floorSize = 0

-- Here you can specify what images to use to create the skybox. Just replace "todo" with a link to an image. (Keep the quotes, though!)
skyboxType =
    -- Skybox.URLSkybox textureBottom textureTop textureSide1 textureSide2 textureSide3 textureSide4
    -- Some other options (comment in the one above and comment one of these out)
    -- Skybox.GSVGSkybox False skyboxTop skyboxSides skyBoxBottom
    -- Skybox.GSVGSphericalSkybox False skyboxTop
    Skybox.URLSphericalSkybox "https://cschank.github.io/img/milky.jpg"

-- this is 50 by 50
skyboxTop : Shape msg
skyboxTop =
    group
        [
            square 50 |> filled lightBlue
        ,   circle 10 |> filled yellow
        ]

-- this is 200 by 50
skyboxSides : Shape msg
skyboxSides =
    group
        [
            rect 200 50 |> filled lightBlue |> move (0,25)
        ,   rect 200 50 |> filled green |> move(0,-25)
        ,   triangle 10 |> filled darkGreen |> rotate (degrees -30) |> move (0,5)
        ,   text "abcdefghijklmnopqrstuvwxyz" |> centered |> size 16 |> filled red
        ]

-- this is 50 by 50
skyBoxBottom : Shape msg
skyBoxBottom =
    group
        [
        ]


textureBottom : String
textureBottom =
    "todo"

textureTop : String
textureTop =
    "todo"

textureSide1 : String
textureSide1 =
    "todo"

textureSide2 : String
textureSide2 =
    "todo"

textureSide3 : String
textureSide3 =
    "todo"

textureSide4 : String
textureSide4 =
    "todo"


